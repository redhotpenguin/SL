All Perlbal configuration commands: (case insensitive)
===================================

Admin commands:
- - - - - - - -
shutdown                   -- shuts down the server, killing all active connections
shutdown graceful          -- closes listening sockets and stays alive until clients bleed off

create pool <name>               -- create an empty pool
pool <name> add    <ip[:port]>   -- add a node to a pool
pool <name> remove <ip[:port]>   -- remove a node to a pool
set [<pool>] <param> = <value>   -- set a property on a pool (see pool-parameters.txt).
                                    pool is optional when it was just created.

create service <name>              -- create a new service

set [<service>] <param> = <value>  -- set a property on a service (see service-parameters.txt)
                                      service name is optional when service was just created.

enable <service>                   -- enable a service (start listening)
disable <service>                  -- disable a service (stops listening)

use <service_or_pool>              -- sets the implied service or pool for future operations.  note
                                      that creating a service or pool object also "uses" it

header <service> remove <header>           -- remove a header before going to backend node
header <service> insert <header>: <value>  -- insert a header before going to backend node

load <plugin>              -- load a plugin
unload <plugin>            -- unload a plugin

plugins                    -- list plugins

xs                         -- show status of XS modules loaded
xs enable <module>         -- turn on an already-loaded XS module
xs disable <module>        -- turn off an already-loaded XS module

show service               -- list all services
show service <service>     -- show details of given service
show pool                  -- list all pools, nodes, and services using them
show pool <poolname>       -- show members of a pool

reproxy_state              -- dump state of reproxy status

server <param> = <value>   -- set a server parameter, where param is one of:
   max_reproxy_connections
   max_connections
   nice_level
   aio_mode                : one of "none", "linux" (Linux::AIO), or "ioaio" (IO::AIO)
                             This controls how disk IO is done asynchronosly.  Highly recommended
                             to use Linux::AIO or IO::AIO for webserving or reproxying files.
                             For purely reverse proxy or only reproxying URLs, none is fine.
   aio_threads             : number of child threads doing disk IO.  (use between 2-50)
   track_obj               : developer option to track objects


Diagnostic commands:
- - - - - - - - - -
obj                        -- shows objects counts in scope
fd                         -- show file descriptors in use
proc                       -- show CPU usage, current time, pid, and total requests processed
nodes                      -- show BackendHTTP statistics for all backend nodes
node <ip[:port]>           -- show BackendHTTP statistics for specified node
prof on                    -- enable profiling
prof off                   -- disable profiling
prof data                  -- dump profile data
uptime                     -- show time server was started, and current uptime
track                      -- dump out objects tracked, sorted by age

backends
noverify
pending
states [<service>]
leaks [....]
queues
state changes





