#!/usr/bin/microperl

# this program copyright 2009 Silver Lining Networks Inc., and is governed
# by the Silver Lining software license, see http://www.silverliningnetworks.com/
# if you have not received a copy of the license with this software, please
# email support@silverliningnetworks.com for a copy

our $DEBUG       = 1;
our $CONFIG_FILE = '/etc/sl/sl.conf';
our $INSMOD      = '/sbin/insmod';
$|++;

####################################################
# no config is fa non starter
my $config_proxy = get_config_proxy($CONFIG_FILE);

unless ($config_proxy) {
    die "no sln config_proxy exists\n";
}

# grab the mac address
my $ifconfig = `ifconfig`;
my ($macaddr) = $ifconfig =~ m/eth0.*?(\w{2}\:\w{2}\:\w{2}\:\w{2}\:\w{2}\:\w{2})/g;
print "Macaddr is $macaddr\n" if $DEBUG;

$macaddr =~ s/\://g;
$macaddr = lc($macaddr);

my ($proxy, $port) = split(':', $config_proxy);

# ok now load the kernel module
my $load_cmd = "$INSMOD nf_nat_sl sl_device='$macaddr' sl_proxy='$proxy'";
print "load cmd is $load_cmd\n" if $DEBUG;

unless ($DEBUG) {
    `$load_cmd`;    
}

print "$0 finished\n";
exit(0);

sub get_config_proxy {
    my $config_file = shift;
    my $fh;
    unless ( -e $config_file ) {
        restore_config_file();
    }
    open( $fh, '<', $config_file ) or die $!;
    my $line_count = 0;
    while (<$fh>) {
        $line_count++;
        next unless $_ =~ m/^proxy/;
        $config_proxy = ( split( /\s+/, $_ ) )[1];
    }
    close($fh) or die $!;
    if ( $line_count == 0 ) {
        my $restored = restore_config_file();
        unless ($restored) {
            print STDERR "could not restore config file, exiting\n";
            return;
        }

        $config_proxy = get_config_proxy($config_file);
        unless ($config_proxy) {
            print STDERR "could not get config proxy, fatal error`\n";
            return;
        }
        elsif ($config_proxy) {
            print "retrieved config_proxy from restored default\n" if $DEBUG;
        }
    }
    unless ($config_proxy) {
        print STDERR "config file contains data but no config_proxy\n";
        return;
    }
    print "got config_proxy $config_proxy\n" if $DEBUG;
    return $config_proxy;

}

sub restore_config_file {

    if ( $ATTEMPTS++ == 1 ) {
        print STDERR "failed to restore_config_file, exiting\n";
        return;
    }

    # config file got truncated somehow
    my $file = 'sl.conf';
    my $url = "http://fw.slwifi.com/conf/$file";
    chdir('/tmp');
    unlink($file)               if -e $file;
    print "grabbing url $url\n" if $DEBUG;
    my $grab = `/usr/bin/wget $url`;
    unless ( -e $file ) {
        print STDERR "grab failed!: $grab\n";

        # not much we can do without a config file
        return;
    }

    my $mv = `mv $file $CONFIG_FILE`;
    return 1;
}


