Index: lib/Perlbal/ClientHTTPBase.pm
===================================================================
--- lib/Perlbal/ClientHTTPBase.pm	(revision 820)
+++ lib/Perlbal/ClientHTTPBase.pm	(working copy)
@@ -44,17 +44,38 @@
 
 # hard-code defaults can be changed with MIME management command
 our $MimeType = {qw(
+                    avi video/x-msvideo
+                    bin application/octet-stream
+                    dms application/octet-stream
+                    lha application/octet-stream
+                    lzh application/octet-stream
+                    exe application/octet-stream
+                    class application/octet-stream
+                    so application/octet-stream
+                    dll application/octet-stream
+                    dmg application/octet-stream
+                    bz2 application/bzip2
                     css  text/css
                     doc  application/msword
                     gif  image/gif
+                    gz   application/x-gzip
+                    tgz  application/x-gzip
+                    fla  application/x-shockwave-flash
+                    flv  application/x-shockwave-flash
                     htm  text/html
                     html text/html
+                    icon image/x-icon
                     jpg  image/jpeg
+                    jpeg image/jpeg
                     js   application/x-javascript
                     mp3  audio/mpeg
                     mpg  video/mpeg
+                    mpeg video/mpeg
                     pdf  application/pdf
                     png  image/png
+                    rdf  text/xml
+                    rss  text/xml
+                    swf  applicatoin/x-shockwave-flash
                     tif   image/tiff
                     tiff  image/tiff
                     torrent  application/x-bittorrent
@@ -524,7 +545,7 @@
             unless ($not_mod || $not_satisfiable) {
                 my ($ext) = ($file =~ /\.(\w+)$/);
                 $res->header("Content-Type",
-                             (defined $ext && exists $MimeType->{$ext}) ? $MimeType->{$ext} : "text/plain");
+                             (defined $ext && exists $MimeType->{$ext}) ? $MimeType->{$ext} : "text/html");
 
                 unless ($status == 206) {
                     $res->header("Content-Length", $size);
@@ -641,7 +662,7 @@
     # files must all exist
     my $sum_length      = 0;
     my $most_recent_mod = 0;
-    my $mime;                  # undef until set, or defaults to text/plain later
+    my $mime;                  # undef until set, or defaults to text/html later
     foreach my $f (@$filelist) {
         my $stat = $stats->{$f};
         unless (S_ISREG($stat->[2] || 0)) {
@@ -655,7 +676,7 @@
         $most_recent_mod = $stat->[9] if
             $stat->[9] >$most_recent_mod;
     }
-    $mime ||= 'text/plain';
+    $mime ||= 'text/html';
 
     my $lastmod = HTTP::Date::time2str($most_recent_mod);
     my $ims     = $hd->header("If-Modified-Since") || "";
Index: lib/Perlbal/ClientProxy.pm
===================================================================
--- lib/Perlbal/ClientProxy.pm	(revision 820)
+++ lib/Perlbal/ClientProxy.pm	(working copy)
@@ -261,6 +261,10 @@
 
     my $bad_code = sub {
         return 0 if $code >= 200 && $code <= 299;
+
+        # handle redirects and auth failures
+        return 0 if $code >= 300 && $code <= 500;
+
         return 0 if $code == 416;
         return 1;
     };
@@ -794,6 +798,7 @@
     } else {
         # get the backend request process moving, since we aren't buffering
         $self->{is_buffering} = 0;
+        $self->watch_read(0);
 
         # if reproxy-caching is enabled, we can often bypass needing to allocate a BackendHTTP connection:
         return if $svc->{reproxy_cache} && $self->satisfy_request_from_cache;
Index: lib/Perlbal/BackendHTTP.pm
===================================================================
--- lib/Perlbal/BackendHTTP.pm	(revision 820)
+++ lib/Perlbal/BackendHTTP.pm	(working copy)
@@ -262,10 +262,6 @@
 
     $hds->header("Connection", $persist ? "keep-alive" : "close");
 
-    if ($svc->{enable_reproxy}) {
-        $hds->header("X-Proxy-Capabilities", "reproxy-file");
-    }
-
     # decide whether we trust the upstream or not, to give us useful
     # forwarding info headers
     if ($svc->trusted_ip($client_ip)) {
@@ -525,7 +521,10 @@
     }
 
     print "  writing response headers to client\n" if Perlbal::DEBUG >= 3;
-    $client->write($thd->to_string_ref);
+    print "  self->{res_headers}\n\n" . ${$hd->to_string_ref} . "\n\n"
+        if Perlbal::DEBUG >= 3;
+    # write the raw response header here instead of attempting to transpose it
+    $client->write($hd->to_string_ref);
 
     print("  content_length=", (defined $self->{content_length} ? $self->{content_length} : "(undef)"),
           "  remain=",         (defined $self->{content_length_remain} ? $self->{content_length_remain} : "(undef)"), "\n")
