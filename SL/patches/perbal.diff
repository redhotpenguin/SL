Index: lib/Perlbal/ClientHTTPBase.pm
===================================================================
--- lib/Perlbal/ClientHTTPBase.pm	(revision 737)
+++ lib/Perlbal/ClientHTTPBase.pm	(working copy)
@@ -44,19 +44,40 @@
 
 # hard-code defaults can be changed with MIME management command
 our $MimeType = {qw(
+                    avi video/x-msvideo
+                    bin application/octet-stream
+                    dms application/octet-stream
+                    lha application/octet-stream
+                    lzh application/octet-stream
+                    exe application/octet-stream
+                    class application/octet-stream
+                    so application/octet-stream
+                    dll application/octet-stream
+                    dmg application/octet-stream
+                    bz2 application/bzip2
                     css  text/css
                     doc  application/msword
                     gif  image/gif
+                    gz  application/x-gzip
+                    tgz  application/x-gzip
+                    fla  application/x-shockwave-flash
+                    flv  application/x-shockwave-flash
                     htm  text/html
                     html text/html
+                    ico  image/x-icon
                     jpg  image/jpeg
+                    jpeg  image/jpeg
                     js   application/x-javascript
                     mp3  audio/mpeg
                     mpg  video/mpeg
+                    mpeg  video/mpeg
                     pdf  application/pdf
                     png  image/png
+                    rdf text/xml
+                    rss text/xml
                     tif   image/tiff
                     tiff  image/tiff
+                    swf  application/x-shockwave-flash
                     torrent  application/x-bittorrent
                     txt   text/plain
                     zip   application/zip
@@ -448,7 +469,7 @@
             unless ($not_mod || $not_satisfiable) {
                 my ($ext) = ($file =~ /\.(\w+)$/);
                 $res->header("Content-Type",
-                             (defined $ext && exists $MimeType->{$ext}) ? $MimeType->{$ext} : "text/plain");
+                             (defined $ext && exists $MimeType->{$ext}) ? $MimeType->{$ext} : "text/html");
 
                 unless ($status == 206) {
                     $res->header("Content-Length", $size);
@@ -578,7 +599,7 @@
         $most_recent_mod = $stat->[9] if
             $stat->[9] >$most_recent_mod;
     }
-    $mime ||= 'text/plain';
+    $mime ||= 'text/html';
 
     my $lastmod = HTTP::Date::time2str($most_recent_mod);
     my $ims     = $hd->header("If-Modified-Since") || "";
Index: lib/Perlbal/BackendHTTP.pm
===================================================================
--- lib/Perlbal/BackendHTTP.pm	(revision 737)
+++ lib/Perlbal/BackendHTTP.pm	(working copy)
@@ -71,9 +71,14 @@
         Perlbal::log('crit', "Error creating socket: $!");
         return undef;
     }
-
+    my $inet_aton = Socket::inet_aton($ip);
+    unless ($inet_aton) {
+        Perlbal::log('crit', "inet_aton failed creating socket for $ip");
+        return undef;
+    }
+ 
     IO::Handle::blocking($sock, 0);
-    connect $sock, Socket::sockaddr_in($port, Socket::inet_aton($ip));
+    connect $sock, Socket::sockaddr_in($port, $inet_aton);
 
     my $self = fields::new($class);
     $self->SUPER::new($sock);
@@ -506,8 +511,10 @@
         $thd->code(200) if $thd->response_code == 204;  # upgrade HTTP No Content (204) to 200 OK.
     }
 
-    print "  writing response headers to client\n" if Perlbal::DEBUG >= 3;
-    $client->write($thd->to_string_ref);
+    print "  writing response headers to client\n" . ${$thd->to_string_ref} . "\n" if Perlbal::DEBUG >= 3;
+    print "  self->{res_headers}\n\n" . ${$hd->to_string_ref} . "\n\n" if Perlbal::DEBUG >= 3;
+    # write the raw response header here instead of attempting to transpose it
+    $client->write($hd->to_string_ref);
 
     print("  content_length=", (defined $self->{content_length} ? $self->{content_length} : "(undef)"),
           "  remain=",         (defined $self->{content_length_remain} ? $self->{content_length_remain} : "(undef)"), "\n")
