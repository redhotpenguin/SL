ServerRoot           [% cfg.sl_httpd_root %]
ServerAdmin          [% cfg.sl_proxy_admin %]
ServerSignature      Off
ServerTokens         Prod
PidFile              [% cfg.sl_root %]/tmp/sl_proxy.pid
DocumentRoot         [% cfg.sl_root %]/htdocs
TypesConfig          [% cfg.sl_root %]/conf/mime.types
User                 [% cfg.sl_proxy_apache_user %] 
Group                [% cfg.sl_proxy_apache_group %]
KeepAlive            [% cfg.sl_proxy_apache_keepalive %]
MaxKeepAliveRequests 0
KeepAliveTimeout     300
ServerLimit          512
MinSpareServers      [% cfg.sl_proxy_apache_min_spare_servers %]
MaxSpareServers      [% cfg.sl_proxy_apache_max_spare_servers %]
StartServers         [% cfg.sl_proxy_apache_start_servers %]
LogLevel             [% cfg.sl_proxy_apache_loglevel %]
MaxClients           [% cfg.sl_proxy_apache_maxclients %]
ErrorLog             [% cfg.sl_root %]/logs/httpd_proxy_error_log
TransferLog          [% cfg.sl_root %]/logs/httpd_proxy_access_log
MaxRequestsPerChild  [% cfg.sl_proxy_apache_max_requests_per_child %]
LogFormat "%h %l %u %t (%{User-agent}i) \"%r\" %>s %b %{SL_URL}e"
UseCanonicalName     Off
HostNameLookups      Off
Timeout              300
AllowEncodedSlashes On
#ProxyVia On # don't enable this

[% IF cfg.sl_proxy == 'mod_proxy' %]
<IfModule mod_proxy.c>
    # If mod_proxy is used for proxy forwarding
    ProxyRequests On
	
    Listen [% cfg.sl_proxy_apache_listen %]
    
    <IfModule mod_cache.c>
        <IfModule mod_mem_cache.c>
            CacheEnable mem /
            MCacheSize 65536
            MCacheMaxObjectCount 1024
            MCacheMinObjectSize 1
            MCacheMaxObjectSize 4096
        </IfModule>
    </IfModule>
</IfModule>

[% ELSIF cfg.sl_proxy == 'perlbal' %]

Listen [% cfg.sl_proxy_http_backend_port %]

[% END %]

ServerName           [% cfg.sl_proxy_servername %]
ErrorDocument        404	/404.html
ErrorDocument        500	/500.html

LoadModule perl_module        modules/mod_perl.so

PerlPassEnv SL_ROOT
PerlPostConfigRequire "[% cfg.sl_root %]/conf/startup_proxy.pl"
#PerlLoadModule SL::Config
#SLRoot '/home/fred/dev/sl'
[% IF cfg.sl_debug %]
PerlRequire "[% cfg.sl_root %]/conf/db.pl"
[% END %]
PerlSetVar data_root "[% cfg.sl_root %]/data"

[% IF cfg.sl_devel %]
# Apache::Reload for development.
PerlModule           Apache2::Reload
PerlInitHandler      Apache2::Reload
PerlSetVar           ReloadAll On
PerlSetVar           ReloadDirectories "[% cfg.sl_root %]/lib"
[% END %]

PerlSetVar           SLWhiteList [% cfg.sl_whitelist %]
PerlSetVar           SLMethod [% cfg.sl_method %]
PerlSetVar           SLCssUri [% cfg.sl_css_uri %]
PerlSetVar           SLProxy [% cfg.sl_proxy %]
PerlSetVar           SLRateLimit "[% cfg.sl_proxy_rate_limit %]"

PerlPostReadRequestHandler SL::Apache::Proxy::PostReadRequestHandler
PerlMapToStorageHandler    Apache2::Const::OK
PerlTransHandler SL::Apache::Proxy::TransHandler

<Location />
    SetHandler          modperl
 	PerlHeaderParserHandler Apache2::Const::OK
    PerlAccessHandler       SL::Apache::Proxy::AccessHandler
    PerlAuthenHandler       Apache2::Const::OK
    PerlAuthzHandler        Apache2::Const::OK
    PerlTypeHandler         Apache2::Const::OK
[% IF cfg.sl_debug %]
    PerlFixupHandler +Apache::DB
[% ELSIF cfg.sl_small_prof %]
    PerlFixupHandler Apache::SmallProf
[% ELSE %]
    PerlFixupHandler        Apache2::Const::OK
[% END %]
    PerlResponseHandler SL::Apache::Proxy::ResponseHandler
    PerlLogHandler      SL::Apache::Proxy::LogHandler    
</Location>

<Directory />
    AllowOverride None
</Directory>
[% IF cfg.sl_proxy_deflate %]
Include [% cfg.sl_root %]/conf/deflate.conf
[% END %]

[% IF cfg.sl_status %]
<Location /sl_secret_status>
	SetHandler modperl
    PerlHandler Apache2::Status
    PerlSetVar StatusOptionsAll On
</Location>
[% END %]

<Location /sl_secret_ping_button>
  PerlAccessHandler Apache2::Const::OK
  PerlResponseHandler SL::Apache::Proxy::PingHandler
</Location>

<Location /sl_secret_blacklist_button>
  PerlResponseHandler SL::Apache::Proxy::BlacklistHandler
</Location>
