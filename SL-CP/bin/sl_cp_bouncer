#!/usr/bin/perl

use strict;
use warnings;

use SL::Config;
use SL::CP ();
use SL::CP::IPTables ();

use Data::Dumper;

our $Config = SL::Config->new;

use constant DEBUG => $ENV{SL_DEBUG} || 0;

my @ads_users = SL::CP::IPTables->ads_users;

foreach my $user (@ads_users) {

    warn("user " . Dumper($user)) if DEBUG;
    # check data overage
    my $overage = SL::CP::IPTables->check_overage($user->[1], $user->[0]);

    if ($overage) {
        warn(sprintf("$$ mac %s, ip %s expired", $user->[1], $user->[0]))
             if DEBUG;
        SL::CP::IPTables->delete_from_ads_chain($user->[1], $user->[0]);
    }

    # check timed overage
    my $not_timed_out = SL::CP->not_timed_out($user->[1], $user->[0]);
    unless ($not_timed_out) {
        warn(sprintf("$$ mac %s, ip %s expired", $user->[1], $user->[0]))
             if DEBUG;
        SL::CP::IPTables->delete_from_ads_chain($user->[1], $user->[0]);
    }

}


my @paid_users = SL::CP::IPTables->paid_users;

foreach my $user (@paid_users) {

    my $code = SL::CP::IPTables->check_for_paid_mac($user->[1], $user->[0]);


    if ($code == 1) {

        warn(sprintf("$$ mac %s from ip %s still valid", $user->[1], $user->[0]));

    } elsif ($code == 404) {

        # something went really wrong
        warn(sprintf("$$ mac %s, ip %si not registered, removing", $user->[1], $user->[0]));
        SL::CP::IPTables->delete_from_paid_chain($user->[1], $user->[0]);

    } elsif ($code == 401) {

        warn(sprintf("$$ mac %s, ip %s expired, removing", $user->[1], $user->[0]));
        SL::CP::IPTables->delete_from_paid_chain($user->[1], $user->[0]);
    }
}


