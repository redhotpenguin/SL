#!/usr/bin/env perl

use strict;
use warnings;

use Template;
use Template::Context;

use SL::Config;
use SL::DNS;

my $Config = SL::Config->new();

$|++;

if ($ENV{SL_DEBUG}) {
    print "Starting in DEBUG mode\n";
}

# Fill out the httpd.conf
my $conf_tmpl   = sprintf("%s/conf/httpd.conf.tmpl", $Config->sl_root);
my $tmpl_out    = sprintf("%s/httpd.conf", $Config->sl_tmp);
my %tmpl_config = (ABSOLUTE => 1, RELATIVE => 1, INCLUDE_PATH => $Config->sl_root . '/htdocs/');
my $template    = Template->new(\%tmpl_config) || die $Template::ERROR, "\n";
$template->process($conf_tmpl, { cfg => $Config }, $tmpl_out)
  || die $template->error, "\n";

# write the sl root folders
mkdir($Config->sl_tmp); 
mkdir($Config->sl_tmp  . "/$_") for qw( logs );

my $cmd .= sprintf("%s/bin/httpd -f %s/httpd.conf -k start", $Config->sl_root, $Config->sl_tmp);
print "Starting with command: $cmd\n";
my $started = `$cmd`;
print $started;


my $is_active = `pgrep httpd`;
if ($is_active) { 

    # flush the firewall
    print "flushing firewall\n";
    my $iptables_flush = sprintf($Config->sl_iptables_flush, $Config->sl_iptables);
    `$iptables_flush`;

    my $ebtables_flush = sprintf($Config->sl_iptables_flush, $Config->sl_iptables);
    `$ebtables_flush`;

    my @hosts = $Config->sl_search_hosts;

    for (1..2) {
        my $iptables_active = sprintf($Config->sl_iptables_active, $Config->sl_iptables);
        my $ip_out = `$iptables_active`;

        my $ebtables_active = sprintf($Config->sl_ebtables_active, $Config->sl_ebtables);
        my $eb_out = `$ebtables_active`;

        foreach my $host ( @hosts ) {
             print "adding rule for $host\n";

             my @ips = SL::DNS->resolve({hostname => $host});
             sleep 1;
             foreach my $ip (@ips) {
            
                unless ($ip_out =~ m/$ip/) {
                    my $iptables_add = sprintf($Config->sl_iptables_add, $Config->sl_iptables, $ip);
                    `$iptables_add`;
                    print "adding iptables rule for $ip\n";
                }

                unless ($eb_out =~ m/$ip/) {
                    my $ebtables_add = sprintf($Config->sl_ebtables_add, $Config->sl_ebtables, $ip);
                    `$ebtables_add`;
                    print "adding ebtables rule for $ip\n";
                }
            }
        }
    }

} else {
    warn("the proxy could not be started");
}

1;
